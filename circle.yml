version: 2
jobs:
  setup:
    working_directory: /go/src/github.com/segmentio/rate-limiting-log-proxy
    docker:
      - image: 528451384384.dkr.ecr.us-west-2.amazonaws.com/circleci-golang:1.14.2
    steps:
      - checkout
      - restore_cache:
          keys:
            - gomod-{{ checksum "vendor/vendor.json" }}
      - run:
          name: Fetching Dependencies
          command: go mod vendor
      - save_cache:
          key: gomod-{{ checksum "vendor/vendor.json" }}
          paths:
            - "vendor"
      - persist_to_workspace:
          root: .
          paths: [.]

  test:
    working_directory: /go/src/github.com/segmentio/rate-limiting-log-proxy
    docker:
      - image: 528451384384.dkr.ecr.us-west-2.amazonaws.com/circleci-golang:1.14.2
    steps:
      - attach_workspace: { at: . }
      - run:
          name: Install necessary packages
          command: sudo apt-get update && sudo apt-get -y install libsystemd-dev
      - run:
          name: Test
          command: make test

  publish:
    working_directory: /go/src/github.com/segmentio/ecs-logs-kinesis
    docker:
      - image: 528451384384.dkr.ecr.us-west-2.amazonaws.com/circleci-golang:1.14.2
    steps:
      - attach_workspace: { at: . }
      - run:
          name: Install necessary packages
          command: sudo apt-get update && sudo apt-get -y install libsystemd-dev
      - run:
          name: ECR Login
          command: $(aws ecr get-login --no-include-email --region ${AWS_REGION})
      - run:
          name: Publish Docker image
          command: |
            make push_image

workflows:
  version: 2
  run:
    jobs:
      - setup:
          filters:
            tags: { only: /.*/ }
      - test:
          requires: [setup]
          context: org-global
      - publish:
          requires: [setup]
          context: org-global
          filters:
            tags: { only: /^v.*/ }
            branches: { ignore: /.*/ }
